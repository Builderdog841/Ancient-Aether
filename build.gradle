import net.minecraftforge.gradle.userdev.tasks.JarJar

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.gradle' version '[6.0.13, 6.2)'
    id 'io.github.0ffz.github-packages' version '[1,2)'
    id 'org.spongepowered.mixin' version '[0.7,0.8)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.2.0'
    id 'org.moddingx.modgradle.mapping' version '4.0.4'
    id 'org.moddingx.modgradle.sourcejar' version '4.0.4' apply false
}

version = '0.9.10'
group = 'net.builderdog.ancient_aether'
archivesBaseName = 'ancient_aether'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'sugarcane', version: project.mappings

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', 'ancient_aether'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', 'ancient_aether'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.enabledGameTestNamespaces', 'ancient_aether'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.markers', 'REGISTRIES'
            property "mixin.env.remapRefMap", "true"
            property "mixin.env.refMapRemappingFile", "${projectDir}/build/createSrgToMcp/output.srg"

            args '--mod', 'ancient_aether', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/'), '--existing-mod', 'aether'

            environment 'target', 'fmluserdevdata'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven githubPackage.invoke("The-Aether-Team/The-Aether")
    maven githubPackage.invoke("The-Aether-Team/Nitrogen")
    maven githubPackage.invoke("The-Aether-Team/Cumulus")

    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.theillusivec4.top/" }
    maven { url = 'https://maven.minecraftforge.net/' }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    flatDir {
        dir 'libs'
    }
}

dependencies {
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    minecraft "net.neoforged:forge:${project.mc_version}-${project.neoforge_version}"

    implementation fg.deobf("com.aetherteam.aether:aether:${project.aether_version}")
    implementation fg.deobf("curse.maven:aeroblender-879879:4789008")
    implementation fg.deobf("com.github.glitchfiend:TerraBlender-forge:${project.terrablender_version}")
    implementation fg.deobf("com.aetherteam.nitrogen:nitrogen_internals:${project.nitrogen_version}")
    implementation fg.deobf("com.aetherteam.cumulus:cumulus_menus:${project.cumulus_version}")
    implementation fg.deobf("curse.maven:worldedit-225608:4586218")
    //implementation fg.deobf("curse.maven:aether-emissivity-916028:4765812")
    //implementation fg.deobf("curse.maven:panorama-440465:4633630")
    //implementation fg.deobf("curse.maven:panoramica-426082:4019292")
    //implementation fg.deobf("curse.maven:konkrete-410295:5028413")

    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:${project.mixinextras_version}"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:${project.mixinextras_version}")) {
        jarJar.ranged(it, "[0.3.5,)")
    }

    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios_version}:api")
    compileOnly fg.deobf("local:aether_genesis:1.20.1-0.0.1-neoforge")
    compileOnly fg.deobf("curse.maven:deep-aether-852465:5076616")
    compileOnly fg.deobf('software.bernie.geckolib:geckolib-forge-1.20.1:4.2.2')
    compileOnly fg.deobf("curse.maven:aether-redux-867237:5872671")
    compileOnly fg.deobf("curse.maven:aether-lost-content-318602:4927038")
    compileOnly fg.deobf("curse.maven:structure-gel-api-378802:4975615")

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${project.curios_version}")
    //runtimeOnly fg.deobf("local:aether_genesis:1.20.1-0.0.1-neoforge")
    //runtimeOnly fg.deobf("curse.maven:deep-aether-852465:5076616")
    //runtimeOnly fg.deobf('software.bernie.geckolib:geckolib-forge-1.20.1:4.2.2')
    //runtimeOnly fg.deobf("curse.maven:aether-redux-867237:5872671")
    //runtimeOnly fg.deobf("curse.maven:aether-lost-content-318602:4927038")
    //runtimeOnly fg.deobf("curse.maven:structure-gel-api-378802:4975615")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "ancient_aether",
                "Specification-Vendor"    : "ancient_aethersareus",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "ancient_aethersareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'

    archiveClassifier = 'no-embeds'
}

tasks.named('jarJar', JarJar).configure {
    archiveClassifier = ''
}

mixin {
    config "${project.mod_id}.mixins.json"
    add sourceSets.main, "${project.mod_id}.refmap.json"
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}